#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Abstract
This doc contains highlights of http://learn.shayhowe.com/
\end_layout

\begin_layout Section
HTML Introduction
\end_layout

\begin_layout Itemize
HTML vs CSS -> content vs presentation
\end_layout

\begin_layout Itemize
CSS selectors - id,class,<<TODO>>...,type
\end_layout

\begin_layout Itemize
CSS resets take every common HTML element with a predefined style and provide
 one unified style for all browsers
\end_layout

\begin_layout Itemize
Semantics within HTML is the practice of giving content on the page meaning
 and structure by using the proper element.
 Semantic code describes the value of content on a page, regardless of the
 style or appearance of that content
\end_layout

\begin_layout Itemize
Block vs.
 Inline Elements
\end_layout

\begin_deeper
\begin_layout Standard
Most elements are either block- or inline-level elements.
 
\end_layout

\begin_layout Standard

\series bold
Block-level
\series default
 elements begin on a new line, stacking one on top of the other, and occupy
 any available width.
 Block-level elements may be nested inside one another and may wrap inline-level
 elements.
 We’ll most commonly see block-level elements used for larger pieces of
 content, such as paragraphs.
\end_layout

\begin_layout Standard

\series bold
Inline-level
\series default
 elements do not begin on a new line.
 They fall into the normal flow of a document, lining up one after the other,
 and only maintain the width of their content.
 Inline-level elements may be nested inside one another; however, they cannot
 wrap block-level elements.
 We’ll usually see inline-level elements with smaller pieces of content,
 such as a few words.
\end_layout

\begin_layout Standard

\series bold
<img> 
\series default
is inline element!
\end_layout

\begin_layout Standard
A 
\series bold
<div>
\series default
 is a block-level element that is commonly used to identify large groupings
 of content, and which helps to build a web page’s layout and design.
 A 
\series bold
<span>
\series default
, on the other hand, is an inline-level element commonly used to identify
 smaller groupings of text within a block-level element.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
HTML
\series default
 comments start with 
\series bold
<!--
\series default
 and end with 
\series bold
-->
\series default
.
 
\series bold
CSS
\series default
 comments start with
\series bold
 /* 
\series default
and end with 
\series bold
*/
\end_layout

\begin_layout Itemize
The 
\series bold
<head>
\series default
 element is not displayed on a page and is used to outline metadata, including
 the document title, and links to external files.
 It falls directly within the <html> element.
\end_layout

\begin_layout Itemize
Headings are block-level elements, and they come in six different rankings,
 
\series bold
<h1> 
\series default
through
\series bold
 <h6>
\series default
, used by search engine to scan/index page.
 
\end_layout

\begin_layout Itemize
Paragraphs are defined using the 
\series bold
<p>
\series default
 block-level element.
\end_layout

\begin_layout Itemize
Bold -> inline
\series bold
 
\series default
elements:
\series bold
 <strong>
\series default
 (to emphasize importance) and 
\series bold
<b> 
\series default
to stylistically offset text
\end_layout

\begin_layout Itemize
Italicize -> 
\series bold
<em>
\series default
 and 
\series bold
<i>
\end_layout

\begin_layout Itemize
HTML5 building structure (block) elements: 
\series bold
<header>, <section>, <nav>, <aside>,<footer>, <article>
\end_layout

\begin_deeper
\begin_layout Itemize
The <header> element, like it sounds, is used to identify the top of a page,
 article, section, or other segment of a page
\end_layout

\begin_layout Itemize
The <nav> element should be reserved for primary navigation sections only,
 such as global navigation, a table of contents, previous/next links, or
 other noteworthy groups of navigational links.
\end_layout

\begin_layout Itemize
The <article> element is used to identify a section of independent, self-contain
ed content that may be independently distributed or reused.
 We’ll often use the <article> element to mark up blog posts, newspaper
 articles, user-submitted content, and the like
\end_layout

\begin_layout Itemize
The <section> element is used to identify a thematic grouping of content,
 which generally, but not always, includes a heading
\end_layout

\begin_layout Itemize
The <aside> element holds content, such as sidebars, inserts, or brief explanati
ons, that is tangentially related to the content surrounding it.
 When used within an <article> element, for example, the <aside> element
 may identify content related to the author of the article.
\end_layout

\begin_layout Itemize
The <footer> element identifies the closing or end of a page, article, section,
 or other segment of a page.
 Generally the <footer> element is found at the bottom of its parent.
 
\end_layout

\end_deeper
\begin_layout Itemize
By nature the anchor element, 
\series bold
<a>
\series default
, is an inline element, and, according to web standards, inline-level elements
 may not wrap block-level elements.
 With the introduction of HTML5, however, anchor elements specifically have
 permission to wrap either block-, inline-, or any other level elements.
 This is a break from the standard convention, but it’s permissible in order
 to enable entire blocks of content on a page to become links.
\end_layout

\begin_layout Itemize

\emph on
mailto 
\emph default
example: 
\end_layout

\begin_deeper
\begin_layout Standard
<a href="mailto:a@b.com?
\series bold
subject
\series default
=Reaching%20Out&
\series bold
body
\series default
=How%20are%20you">Email Me</a>
\end_layout

\end_deeper
\begin_layout Itemize
link to the same page:
\end_layout

\begin_deeper
\begin_layout Standard
<body id="top"> ...
 <a href="#top">Back to top</a> ...
 </body>
\end_layout

\end_deeper
\begin_layout Section
CSS Introduction
\end_layout

\begin_layout Subsection
Basics
\end_layout

\begin_layout Itemize
CSS is a language that allows us to add layout and design to our pages,
 and it allows us to share those styles from element to element and page
 to page
\end_layout

\begin_layout Itemize

\series bold
Cascade: 
\series default
Within CSS, all styles cascade from the top of a style sheet to the bottom,
 allowing different styles to be added or overwritten as the style sheet
 progresses.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p {   background: orange;   font-size: 24px; } p {   background: green;
 }
\end_layout

\end_inset

 paragraph has green background and font size is 24px - 
\emph on
cascading styles
\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p {   background: orange;   background: green; }
\end_layout

\end_inset

 paragraph has green background - 
\emph on
cascading properties
\end_layout

\end_deeper
\begin_layout Itemize
Every selector in CSS has a 
\series bold
specificity weight
\series default
.
 Specificity Hierarchy:
\end_layout

\begin_deeper
\begin_layout Enumerate
Inline styles (Presence of style in document).
 An inline style lives within your XHTML document.
 It is attached directly to the element to be styled.
 E.g.
 <h1 style="color: #fff;"> 
\end_layout

\begin_layout Enumerate
IDs (# of ID selectors) ID is an identifier for your page elements, such
 as #div.
 
\end_layout

\begin_layout Enumerate
Classes, attributes and pseudo-classes (# of class selectors).
 This group includes .classes, [attributes] (e.g.
 p[title] ) and pseudo-classes such as :hover, :focus etc.
 (e.g.
 a:hover) 
\end_layout

\begin_layout Enumerate
Elements and pseudo-elements (# of Element (type) selectors).
 Including for instance p:first-line
\end_layout

\end_deeper
\begin_layout Itemize
When selectors are combined they should be read from right to left.
 The selector farthest to the right, directly before the opening curly bracket,
 is known as the 
\emph on
key selector
\emph default
.
 The key selector identifies exactly which element the styles will be applied
 to.
 Any selector to the left of the key selector will serve as a 
\emph on
prequalifier, 
\emph default
e.g.
 .table .row{...} -> 
\bar under
row 
\bar default
is a 
\emph on
key selector 
\emph default
and 
\bar under
table
\bar default
 is a 
\emph on
prequalifier
\emph default
 
\end_layout

\begin_layout Itemize
Using multiple classes, we can layer on as many styles as we wish, keeping
 our code lean and our specificity weights low, e.g.
 :
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

.btn { font-size: 16px; } 
\end_layout

\begin_layout Plain Layout

.btn-danger { background: red; } 
\end_layout

\begin_layout Plain Layout

.btn-success { background: green; }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<a class="btn btn-danger">...</a>
\end_layout

\begin_layout Plain Layout

<a class="btn btn-success">...</a>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
color might be set using:
\end_layout

\begin_deeper
\begin_layout Itemize
constant, e.g.
 red
\end_layout

\begin_layout Itemize
hex, e.g.
 #ff0000 (it could be shortened to #f00)
\end_layout

\begin_layout Itemize
rgb e.g rgb(255,0,0) or RGB color values may also include an alpha, or transparen
cy, channel by using the rgba() -> rgba(255,0,0,1) 100% opaque
\end_layout

\begin_layout Itemize
hsl() function, which stands for hue, saturation, and lightness.
\end_layout

\end_deeper
\begin_layout Itemize
lengths are absolute (px -pixel) or relative (percentage or em (A single
 em unit is equivalent to an element’s font size.
 So, for example, if an element has a font size of 14 pixels and a width
 set to 5em, the width would equal 70 pixels )
\end_layout

\begin_layout Itemize
Exactly how elements are displayed—as block-level elements, inline elements,
 or something else—is determined by the 
\series bold
display 
\series default
property.
 .
 There are quite a few values for the display property, but the most common
 are 
\series bold
\emph on
block
\series default
\emph default
, 
\series bold
\emph on
inline
\series default
\emph default
, 
\series bold
\emph on
inline-block
\series default
\emph default
 (.
 Using this value will allow an element to behave as a block-level element,
 accepting all box model properties (which we’ll cover soon).
 However, the element will be displayed in line with other elements, and
 it will not begin on a new line by default.), and 
\series bold
\emph on
none
\series default
\emph default
 (not visible).
\end_layout

\begin_layout Itemize
Two types of properties shorthand (margin: 10px 20px 0 15px;) and longhand(margi
n-top:10px)
\end_layout

\begin_layout Itemize

\series bold
box-sizing 
\series default
property allows us to change exactly how the box model works and how an
 element’s size is calculated.
 The property accepts three primary values—
\series bold
\emph on
content-box
\series default
\emph default
, 
\series bold
\emph on
padding-box, 
\series default
\emph default
and 
\series bold
\emph on
border-box.

\series default
\emph default
 As CSS3 was introduced, browsers gradually began to support different propertie
s and values, including the box-sizing property, by way of vendor prefixes.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

*:before, *:after {
\end_layout

\begin_layout Plain Layout

 -webkit-box-sizing: border-box;  //Safari, Chrome
\end_layout

\begin_layout Plain Layout

   -moz-box-sizing: border-box;   //Firefox 
\end_layout

\begin_layout Plain Layout

      box-sizing: border-box;
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Positioning context
\end_layout

\begin_layout Subsubsection
Float 
\end_layout

\begin_layout Quote

\emph on
Disclaimer: using float to aling elements is a little bit controversial
 among web developers (check out http://stackoverflow.com/questions/8554043/what-
is-clearfix)
\end_layout

\begin_layout Itemize

\series bold
float
\series default
 property allows us to take an element, remove it from the normal flow of
 a page, and position it to the left or right of its parent element; when
 the float property is used on multiple elements at the same time, it provides
 the ability to create a layout by floating elements directly next to or
 opposite each other, as seen in multiple-column layouts
\end_layout

\begin_layout Itemize
when an element is floated, it will float all the way to the edge of its
 parent element; ff there isn’t a parent element, the floated element will
 then float all the way to the edge of the page
\end_layout

\begin_layout Itemize
Floats May Change an Element’s Display Value: For example, an element with
 a display value of inline, such as the <span> inline-level element, ignores
 any height or width property values.
 However, should that inline-level element be floated, its display value
 will be changed to block, and it may then accept height or width property
 values.
\end_layout

\begin_layout Itemize
float property was never actually intended to be used for layout and positioning
 purposes, and thus it comes with a few pitfalls :/ :
\end_layout

\begin_deeper
\begin_layout Itemize
Often margin and padding property values aren’t interpreted correctly, causing
 them to blend into the floated element; other properties can be affected,
 too
\end_layout

\begin_layout Itemize
Another pitfall is that sometimes unwanted content begins to wrap around
 a floated element.
 Removing an element from the flow of the document allows all the elements
 around the floated element to wrap and consume any available space around
 the floated element, which is often undesired.
\end_layout

\end_deeper
\begin_layout Itemize
To prevent content from wrapping around floated elements, we need to clear,
 or contain, those floats and return the page to its normal flow.
\end_layout

\begin_layout Itemize

\emph on
Clear
\emph default
 
\emph on
float
\emph default
: Clearing floats is accomplished using the 
\series bold
clear
\series default
 property, which accepts a few different values: the most commonly used
 values being 
\emph on
left, right, 
\emph default
and 
\emph on
both.
 
\emph default
It is important that this clear be applied to an element appearing after
 the floated elements, not before, to return the page to its normal flow.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

footer{ clear:both}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Containing floats: 
\begin_inset Quotes eld
\end_inset

clearfix
\begin_inset Quotes erd
\end_inset

 is applied: 
\emph default
CSS is clearing any floated elements within the element with the class of
 
\emph on
group 
\emph default
and returning the flow of the document back to normal
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

.group:before, .group:after { content: ""; display: table; }
\end_layout

\begin_layout Plain Layout

.group:after { clear: both; } 
\end_layout

\begin_layout Plain Layout

.group { clear: both; *zoom: 1; }
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Always set 
\series bold
width 
\series default
on floated element
\end_layout

\begin_layout Itemize
Floated boxes will move to the left or right until their outer edge touches
 the containing block edge or the outer edge of another float.
\end_layout

\begin_layout Itemize
Stacking: When we float an element it is shifted to the right or to the
 left until it reaches the edge of the containing block.
 If we then float another element nearby in the same direction, it will
 be shifted until its edge reaches the edge of the first floating element.
 
\end_layout

\begin_layout Subsubsection
inline-block
\end_layout

\begin_layout Itemize
use 
\emph on
display:
\series bold
inline-block 
\end_layout

\begin_layout Itemize
The inline-block method is primarily helpful for laying out pages or for
 placing elements next to one another within a line.
\end_layout

\begin_layout Itemize
inline-block value for the display property will display elements within
 a line while allowing them to accept all box model properties, including
 
\emph on
height, width, padding, border, and margin.

\emph default
 Using inline-block elements allows us to take full advantage of the box
 model without having to worry about clearing any floats.
\end_layout

\begin_layout Itemize

\series bold
One drawback
\series default
: rember about removing spaces between inline-block elements (simplest remove
 space or use <-- --> e.g)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<section> 
\end_layout

\begin_layout Plain Layout

...
 
\end_layout

\begin_layout Plain Layout

</section><!-- 
\end_layout

\begin_layout Plain Layout

--><section> 
\end_layout

\begin_layout Plain Layout

...
 
\end_layout

\begin_layout Plain Layout

</section><!-- 
\end_layout

\begin_layout Plain Layout

--><section> 
\end_layout

\begin_layout Plain Layout

...
 
\end_layout

\begin_layout Plain Layout

</section>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Quote
Whether it’s better to use floats or inline-block elements to lay out the
 structure of a page is open to debate.
 My approach is to use inline-block elements to create the grid—or layout—of
 a page and to then use floats when I want content to wrap around a given
 element (as floats were intended to do with images).
 Generally, I also find inline-block elements easier to work with.
\end_layout

\begin_layout Quote
That said, use whatever works best for you.
 If you are comfortable with one approach over the other, then go for it.
\end_layout

\begin_layout Quote
Currently there are new CSS specifications in the works—specifically
\series bold
 flex-
\series default
 and 
\series bold
grid-
\series default
 based properties—that will help address how to best lay out pages.
 Keep an eye out for these methods as they begin to surface.
\end_layout

\begin_layout Subsubsection
Uniquely Positioning Elements
\end_layout

\begin_layout Itemize

\series bold
position 
\series default
property 
\end_layout

\begin_layout Itemize
default value: 
\series bold
static 
\series default
(it exists in normal document flow)
\end_layout

\begin_layout Itemize

\series bold
relative 
\series default
\emph on
position 
\emph default
allows elements to appear within the normal flow a page, leaving space for
 an element as intended while 
\series bold
not allowing 
\series default
other elements to flow around it; however, it also allows an element’s display
 position to be modified with the 
\series bold
box offset 
\series default
properties, and other elements are not allowed to move into the the original
 position of that element 
\end_layout

\begin_layout Itemize
The 
\series bold
absolute 
\series default
value for the 
\emph on
position 
\emph default
property is different from the 
\series bold
relative
\series default
 value in that an element with a position value of absolute will not appear
 within the normal flow of a document, and the original space and position
 of the absolutely positioned element will not be preserved (other elements
 might take that place) Additionally, absolutely positioned elements are
 moved in relation to their closest relatively (i.e.
 
\emph on
position != static
\emph default
) positioned parent element.
 Should a relatively positioned parent element not exist, the absolutely
 positioned element will be positioned in relation to the <body> element,
 Examples:
\end_layout

\begin_deeper
\begin_layout Itemize
Set the bottom edge of the image to 5px above the bottom edge of its containing
 element
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

img { position:absolute; bottom:5px; }
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Set the left edge of the image 5px to the right of the left edge of its
 containing element
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

img { position:absolute; left:5px; }
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
fixed 
\series default
position might be used to create footer/header that is always visible to
 viewer:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

box_2 { position: fixed; 
\end_layout

\begin_layout Plain Layout

bottom: 0;  //always at the bottom of page
\end_layout

\begin_layout Plain Layout

left: 0; right: 0; //stretch the width to entire viewport available space
\end_layout

\begin_layout Plain Layout

background: #f95b34; 
\end_layout

\begin_layout Plain Layout

padding: 10px 0; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Working with typography
\end_layout

\begin_layout Itemize
font-color, font-family,font-size,font-style (
\emph on
italic
\emph default
), font-weight (
\series bold
bold
\series default
), font-variant (small-caps)
\end_layout

\begin_layout Itemize
line-height might be used to center vertically one line text (often used
 in buttons)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

.btn { height: 22px; line-height: 22px; }
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
shorthand version (The order of these property values should be as follows,
 from left to right: font-style, font-variant, font-weight, font-size, line-heig
ht, and font-family): 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

html { font: italic small-caps bold 14px/22px "Helvetica Neue", Helvetica;
 }
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
text-align, text-decoration (underline), text-indent (to indent first line
 of text),text-shadow, text-transform (capitalize, uppercase, lowercase),
 letter-spacing, word-spacing 
\end_layout

\begin_layout Itemize
Ciation: q, blockquote
\end_layout

\begin_layout Subsection
Background and Gradients
\end_layout

\begin_layout Itemize
background and background-color (the former accepts image and color the
 latter only colors), background-image
\end_layout

\begin_layout Itemize
when you set transparent background it's good to prepare fallback color
 for older browsers that does not handle transparency: leverage properties
 cascading:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

div {   
\end_layout

\begin_layout Plain Layout

 background-color: #b2b2b2;  
\end_layout

\begin_layout Plain Layout

 background-color: rgba(0, 0, 0, .3); 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
background image by default starts from left top corner and repeats horizontally
 and vertically image to fill element background, it could be changed with
 background-repeat and background-position help:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

div { 
\end_layout

\begin_layout Plain Layout

 background-image: url("alert.png"); 
\end_layout

\begin_layout Plain Layout

 background-position: 20px 10px; 
\end_layout

\begin_layout Plain Layout

 background-repeat: no-repeat; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

div {   background: #b2b2b2 url("alert.png") 20px 10px no-repeat; }
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
shorthand version:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

div {   background: #b2b2b2 url("alert.png") 20px 10px no-repeat; }
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
linear gradient and radius gradient (notice vendors prefixes)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

.row-alt {    
\end_layout

\begin_layout Plain Layout

  background: -webkit-linear-gradient(to right, #a1d3b0, #f6f1d3); 
\end_layout

\begin_layout Plain Layout

  background: -moz-linear-gradient(to right, #a1d3b0, #f6f1d3);   
\end_layout

\begin_layout Plain Layout

  background: linear-gradient(to right, #a1d3b0, #f6f1d3);   
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
multiple background images (comma-separated list, first in the list is foremost
 the last is rearmost) 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

.notification {  
\end_layout

\begin_layout Plain Layout

background: url("tick.png") 20px 50% no-repeat, linear-gradient(#72c41f,
 #5c9e19);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
background-size property allows us to change the size of a background image,
 while the background-clip and background-origin properties allow us to
 control where a background image is cropped and where a background image
 is contained within the element (inside the border or inside the padding,
 for example)
\end_layout

\begin_layout Itemize
setting a background-size property with a 100% width will make the background
 image occupy the full width of the element.
 If a second value isn’t identified after the width, the height value will
 be automatically set to preserve the aspect ratio of the background image.
\end_layout

\begin_layout Itemize
background-size : The keyword value auto may be used as either the width
 or height value to preserve the aspect ratio of the background image.
 For example, if we want to set the height of the background image to be
 75% of the height of the element while maintaining the image’s aspect ratio,
 we can use a background-size property value of auto 75%.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

div {   background: url("shay.jpg") 0 0 no-repeat;   
\end_layout

\begin_layout Plain Layout

		background-size: auto 75%;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
background-size might also have value: cover (entire element is covered,
 some parts of image might not be visible) or contain (adjust image to show
 entire image in element and make use the most of available element space)
\end_layout

\end_deeper
\begin_layout Subsection
Lists
\end_layout

\begin_layout Itemize
unordered (ul), ordered (ol), description (dl)
\end_layout

\begin_layout Itemize
ordered lists: ol attributes: start, reversed; li attribute: value
\end_layout

\begin_layout Itemize
description: 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<dl>   
\end_layout

\begin_layout Plain Layout

<dt>study</dt>  
\end_layout

\begin_layout Plain Layout

<dd>The devotion of time and attention to acquiring knowledge on an academic
 subject</dd> 
\end_layout

\begin_layout Plain Layout

</dl>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
each list might be nested in another (remeber to wrap nested list in <li>)
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<ol>   
\end_layout

\begin_layout Plain Layout

 <li>Walk the dog</li>  
\end_layout

\begin_layout Plain Layout

 <li>Fold laundry</li>   
\end_layout

\begin_layout Plain Layout

 <li>     Go to the grocery and buy:    
\end_layout

\begin_layout Plain Layout

	<ul>       
\end_layout

\begin_layout Plain Layout

	 <li>Milk</li> 
\end_layout

\begin_layout Plain Layout

     <li>Bread</li>    
\end_layout

\begin_layout Plain Layout

     <li>Cheese</li>    
\end_layout

\begin_layout Plain Layout

    </ul>   
\end_layout

\begin_layout Plain Layout

 </li>
\end_layout

\begin_layout Plain Layout

</ol>
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
use list-style-type to change list marker
\end_layout

\begin_layout Itemize
horizontally displaying list, two approaches:
\end_layout

\begin_deeper
\begin_layout Itemize
change display to inline or inline-block (drawback: markers are not visible)
\end_layout

\begin_layout Itemize
use float 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
